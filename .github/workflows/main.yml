name: Build Kivy Android APK
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            build-essential \
            git \
            zlib1g-dev \
            libncurses5-dev \
            libgdbm-dev \
            libnss3-dev \
            libssl-dev \
            libffi-dev \
            libsqlite3-dev \
            libreadline-dev \
            python3-pip \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        pip install cython==0.29.36

    - name: Clone python-for-android
      run: |
        git clone https://github.com/kivy/python-for-android
        cd python-for-android
        git checkout master

    - name: Build with python-for-android
      run: |
        cd python-for-android
        ./distribute.sh -m "kivy" -d myapp
        
        # Build the APK
        cd myapp
        ./build.py \
            --dir ${{ github.workspace }} \
            --package org.myapp \
            --name "MyApp" \
            --version 1.0 \
            --orientation portrait

    - name: Find and upload APK
      run: |
        echo "=== Buscando APK generado ==="
        find python-for-android -name "*.apk" -exec echo "APK encontrado: {}" \;
        apk_path=$(find python-for-android -name "*.apk" | head -n 1)
        echo "APK_PATH=${apk_path}" >> $GITHUB_ENV
        cp "${apk_path}" .

      if: success()

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: MyApp-APK
        path: ${{ env.APK_PATH }}
